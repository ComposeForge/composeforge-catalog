name: catalog-ci
on:
  push:
    paths:
      - 'templates/**'
      - '.env.sample'
      - 'tools/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  nextcloud:
    runs-on: ubuntu-latest
    env:
      COMPOSE_PROJECT_NAME: cf_test      # avoid name clashes on the runner
      NEXTCLOUD_PORT: 8081               # port used in .env.sample
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: pip install jinja2 pyyaml

      # ------- render template into ./pkg ------------------
      - name: Render package
        run: python3 tools/render.py nextcloud --out-dir pkg --port $NEXTCLOUD_PORT

      # ------- bring the stack up on the runner -----------
      - name: Compose up
        run: docker compose -f pkg/docker-compose.yml --env-file pkg/.env up -d

      # -- copy the env so the health-check can source it --
      - name: Prepare env for health-check
        run: cp pkg/.env .env

      - name: Healthcheck
        run: |
          chmod +x templates/nextcloud/healthcheck.sh
          templates/nextcloud/healthcheck.sh
        env:
          NEXTCLOUD_PORT: ${{ env.NEXTCLOUD_PORT }}

      # ------- clean up ------------------------------------
      - name: Compose down
        if: always()
        run: docker compose -f pkg/docker-compose.yml --env-file pkg/.env down -v  && rm .env

